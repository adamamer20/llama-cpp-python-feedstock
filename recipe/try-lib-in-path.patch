diff --git a/llama_cpp/llama_cpp.py b/llama_cpp/llama_cpp.py
index 4e4c870..37a126b 100644
--- a/llama_cpp/llama_cpp.py
+++ b/llama_cpp/llama_cpp.py
@@ -33,16 +33,21 @@ def _load_shared_library(lib_base_name: str):
     if sys.platform.startswith("linux"):
         _lib_paths += [
             _base_path / f"lib{lib_base_name}.so",
+            f"lib{lib_base_name}.so",
         ]
     elif sys.platform == "darwin":
         _lib_paths += [
             _base_path / f"lib{lib_base_name}.so",
             _base_path / f"lib{lib_base_name}.dylib",
+            f"lib{lib_base_name}.so",
+            f"lib{lib_base_name}.dylib",
         ]
     elif sys.platform == "win32":
         _lib_paths += [
             _base_path / f"{lib_base_name}.dll",
             _base_path / f"lib{lib_base_name}.dll",
+            f"{lib_base_name}.dll",
+            f"lib{lib_base_name}.dll",
         ]
     else:
         raise RuntimeError("Unsupported platform")
@@ -64,7 +69,7 @@ def _load_shared_library(lib_base_name: str):
 
     # Try to load the shared library, handling potential errors
     for _lib_path in _lib_paths:
-        if _lib_path.exists():
+        if _lib_path.exists() or isinstance(_lib_path, str):
             try:
                 return ctypes.CDLL(str(_lib_path), **cdll_args)
             except Exception as e:
diff --git a/llama_cpp/llava_cpp.py b/llama_cpp/llava_cpp.py
index 72f6a12..cd912a7 100644
--- a/llama_cpp/llava_cpp.py
+++ b/llama_cpp/llava_cpp.py
@@ -34,16 +34,21 @@ def _load_shared_library(lib_base_name: str):
     if sys.platform.startswith("linux"):
         _lib_paths += [
             _base_path / f"lib{lib_base_name}.so",
+            f"lib{lib_base_name}.so",
         ]
     elif sys.platform == "darwin":
         _lib_paths += [
             _base_path / f"lib{lib_base_name}.so",
             _base_path / f"lib{lib_base_name}.dylib",
+            f"lib{lib_base_name}.so",
+            f"lib{lib_base_name}.dylib",
         ]
     elif sys.platform == "win32":
         _lib_paths += [
             _base_path / f"{lib_base_name}.dll",
             _base_path / f"lib{lib_base_name}.dll",
+            f"{lib_base_name}.dll",
+            f"lib{lib_base_name}.dll",
         ]
     else:
         raise RuntimeError("Unsupported platform")
@@ -65,7 +70,7 @@ def _load_shared_library(lib_base_name: str):
 
     # Try to load the shared library, handling potential errors
     for _lib_path in _lib_paths:
-        if _lib_path.exists():
+        if _lib_path.exists() or isinstance(_lib_path, str):
             try:
                 return ctypes.CDLL(str(_lib_path), **cdll_args)
             except Exception as e: